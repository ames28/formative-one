{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"searchbar\"\n};\nconst _hoisted_3 = {\n  class: \"search-icons\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"fas fa-spinner fa-spin\"\n};\nconst _hoisted_5 = {\n  class: \"result-list\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"fas fa-image\"\n};\nconst _hoisted_8 = [\"innerHTML\"];\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-chevron-right\"\n})], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.fetchSearchNews && _ctx.fetchSearchNews(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"search...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchword = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.searchword]])], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"div\", _hoisted_3, [!$data.isBusy ? (_openBlock(), _createElementBlock(\"i\", {\n    key: 0,\n    class: \"fas fa-search\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.fetchSearchNews && _ctx.fetchSearchNews(...args))\n  })) : (_openBlock(), _createElementBlock(\"i\", _hoisted_4)), _createElementVNode(\"i\", {\n    class: \"fas fa-times\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.fetchTopNews && $options.fetchTopNews(...args))\n  })])]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.articles, (article, index) => {\n    return _openBlock(), _createElementBlock(\"article\", {\n      key: index\n    }, [_createElementVNode(\"header\", null, [article.urlToImage ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: article.urlToImage,\n      alt: \"\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6)) : (_openBlock(), _createElementBlock(\"i\", _hoisted_7))]), _createElementVNode(\"section\", {\n      innerHTML: article.title\n    }, null, 8\n    /* PROPS */\n    , _hoisted_8), _hoisted_9]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EAIFA,KAAK,EAAC;;;;EAEGA,KAAK,EAAC;;;EAInBA,KAAK,EAAC;;;;;EAIWA,KAAK,EAAC;;;;gCAGpBC,oBAES,QAFT,EAES,IAFT,EAES,cADTA,oBAAoC,GAApC,EAAoC;EAAjCD,KAAK,EAAC;AAA2B,CAApC,CACS,CAFT;;AAAA;;;uBAlBZE,oBAuBM,KAvBN,cAuBM,CAtBFD,oBASM,KATN,cASM,CARFA,oBAEO,MAFP,EAEO;IAFAE,QAAM,wDAAUC,qDAAV,EAAyB,WAAzB;EAEN,CAFP,mBACIH,oBAAgE,OAAhE,EAAgE;IAAzDI,IAAI,EAAC,MAAoD;IAA7CC,WAAW,EAAC,WAAiC;+DAAZC,mBAAUC;EAAE,CAAhE;;EAAA,kBAAoDD,oBADxD;;EAAA,CAQE,EALFN,oBAIM,KAJN,cAIM,EAHQM,8BAAVL,oBAAqE,GAArE,EAAqE;UAAA;IAAnDF,KAAK,EAAC,eAA6C;IAA5BS,OAAK,yCAAEL,qDAAF;EAAuB,CAArE,oBACAF,oBAA6C,GAA7C,cAEE,EADFD,oBAAkD,GAAlD,EAAkD;IAA/CD,KAAK,EAAC,cAAyC;IAAzBS,OAAK,yCAAEC,uDAAF;EAAoB,CAAlD,CACE,CAJN,CAKE,CATN,CAsBE,EAZFT,oBAWM,KAXN,cAWM,oBAVHC,oBASUS,SATV,EASU,IATV,EASUC,YAT0BL,cAS1B,EATkC,CAA3BM,OAA2B,EAAlBC,KAAkB,KAAb;yBAA/BZ,oBASU,SATV,EASU;MATqCa,GAAG,EAAED;IAS1C,CATV,EAAyD,CACpDb,oBAGS,QAHT,EAGS,IAHT,EAGS,CAFMY,OAAO,CAACG,4BAAnBd,oBAAgE,KAAhE,EAAgE;YAAA;MAAhCe,GAAG,EAAEJ,OAAO,CAACG,UAAmB;MAAPE,GAAG,EAAC;IAAG,CAAhE;;IAAA,gCACAhB,oBAAmC,GAAnC,cACK,CAHT,CADoD,EAKpDD,oBAA0C,SAA1C,EAA0C;MAAjCkB,SAAsB,EAAdN,OAAO,CAACO;IAAiB,CAA1C;;IAAA,aALoD,EAMpDC,UANoD,CAAzD;GASU,CATV;;EAAA,CAUG,EAXN,CAYE,CAvBN","names":["class","_createElementVNode","_createElementBlock","onSubmit","_ctx","type","placeholder","$data","$event","onClick","$options","_Fragment","_renderList","article","index","key","urlToImage","src","alt","innerHTML","title","_hoisted_9"],"sourceRoot":"","sources":["/Users/amyweb/Documents/GitHub/formative-one/src/components/News.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"searchbar\">\n            <form @submit.prevent=\"fetchSearchNews\">\n                <input type=\"text\" placeholder=\"search...\" v-model=\"searchword\">\n            </form>\n            <div class=\"search-icons\">\n                <i v-if=\"!isBusy\" class=\"fas fa-search\" @click=\"fetchSearchNews\"></i>\n                <i v-else class=\"fas fa-spinner fa-spin\"></i>\n                <i class=\"fas fa-times\" @click=\"fetchTopNews\"></i>\n            </div>\n        </div>\n        <div class=\"result-list\">\n           <article v-for=\"(article, index) in articles\" :key=\"index\">\n                <header>\n                    <img v-if=\"article.urlToImage\" :src=\"article.urlToImage\" alt=\"\">\n                    <i v-else class=\"fas fa-image\"></i>\n                </header>\n                <section v-html=\"article.title\"></section>\n                <footer>\n                <i class=\"fas fa-chevron-right\"></i>\n                </footer>\n           </article>\n        </div>\n    </div>\n</template>\n\n<script>\n\n\nexport default{\n    name: 'NewsApp',\n    props: ['apiKey'],\n    data(){\n        return{\n            apiUrl: '',\n            isBusy: false,\n            showLoader: false,\n            currentPage: 1,\n            totalResults: 0,\n            maxPerPage: 20,\n            searchword: '',\n            articles: [],\n            country: 'nz',\n        }\n    },\n    methods: {\n        resetData(){\n        this.currentPage = 1;\n        this.articles = [];\n        },\n        fetchTopNews() {\n            this.apiUrl = 'https://newsapi.org/v2/top-headlines?country=' + this.country + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n            this.isBusy = true;\n            this.searchword = '';\n\n            this.resetData();\n            this.fetchData();\n        },\n        fetchData(){\n            let req = new Request(this.apiUrl + '&page=' + this.currentPage);\n            fetch(req)\n                .then((resp) => resp.json())\n                .then((data) => {\n                    this.totalResults = data.totalResults;\n                    data.articles.forEach(element => {\n                        this.articles.push(element);\n                    });\n                    this.isBusy = false;\n                    this.showLoader = false;\n                })\n                // .catch((error) => {\n                //     console.log('Error');\n                // })\n        }\n    },\n    created() {\n        this.fetchTopNews();\n    }\n}\n\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}