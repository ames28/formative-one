{"ast":null,"code":"export default {\n  name: 'NewsApp',\n  props: ['apiKey'],\n\n  data() {\n    return {\n      apiUrl: '',\n      isBusy: false,\n      showLoader: false,\n      currentPage: 1,\n      totalResults: 0,\n      maxPerPage: 20,\n      searchword: '',\n      articles: [],\n      country: 'nz'\n    };\n  },\n\n  computed: {\n    pageCount() {\n      return Math.ceil(this.totalResults / this.maxPerPage);\n    }\n\n  },\n  methods: {\n    navTo(url) {\n      window.open(url);\n    },\n\n    resetData() {\n      this.currentPage = 1;\n      this.articles = [];\n    },\n\n    fetchSearchNews() {\n      if (this.searchword !== '') {\n        this.apiUrl = 'https://newsapi.org/v2/everything?q=' + this.searchword + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n        this.isBusy = true;\n        this.resetData();\n        this.fetchData();\n      } else {\n        this.fetchTopNews();\n      }\n    },\n\n    fetchTopNews() {\n      this.apiUrl = 'https://newsapi.org/v2/top-headlines?country=' + this.country + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n      this.isBusy = true;\n      this.searchword = '';\n      this.resetData();\n      this.fetchData();\n    },\n\n    fetchData() {\n      let req = new Request(this.apiUrl + '&page=' + this.currentPage);\n      fetch(req).then(resp => resp.json()).then(data => {\n        this.totalResults = data.totalResults;\n        data.articles.forEach(element => {\n          this.articles.push(element);\n        });\n        this.isBusy = false;\n        this.showLoader = false;\n      }); // .catch((error) => {\n      //     console.log('Error');\n      // })\n    },\n\n    scrollTrigger() {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.intersectionRatio > 0 && this.currentPage < this.pageCount) {\n            this.showLoader = true;\n            this.currentPage += 1;\n            this.fetchData();\n          }\n        });\n      });\n      observer.observe(this.$refs.infinitescrolltrigger);\n    }\n\n  },\n\n  created() {\n    this.fetchTopNews();\n  },\n\n  mounted() {\n    this.scrollTrigger();\n  }\n\n};","map":{"version":3,"mappings":"AAqCA,eAAc;EACVA,IAAI,EAAE,SADI;EAEVC,KAAK,EAAE,CAAC,QAAD,CAFG;;EAGVC,IAAI,GAAE;IACF,OAAM;MACFC,MAAM,EAAE,EADN;MAEFC,MAAM,EAAE,KAFN;MAGFC,UAAU,EAAE,KAHV;MAIFC,WAAW,EAAE,CAJX;MAKFC,YAAY,EAAE,CALZ;MAMFC,UAAU,EAAE,EANV;MAOFC,UAAU,EAAE,EAPV;MAQFC,QAAQ,EAAE,EARR;MASFC,OAAO,EAAE;IATP,CAAN;EAWH,CAfS;;EAgBVC,QAAQ,EAAC;IACLC,SAAS,GAAE;MACP,OAAOC,IAAI,CAACC,IAAL,CAAU,KAAKR,YAAL,GAAkB,KAAKC,UAAjC,CAAP;IACJ;;EAHK,CAhBC;EAqBVQ,OAAO,EAAE;IACLC,KAAK,CAACC,GAAD,EAAK;MACNC,MAAM,CAACC,IAAP,CAAYF,GAAZ;IACH,CAHI;;IAILG,SAAS,GAAE;MACX,KAAKf,WAAL,GAAmB,CAAnB;MACA,KAAKI,QAAL,GAAgB,EAAhB;IACC,CAPI;;IAQLY,eAAe,GAAG;MACd,IAAG,KAAKb,UAAL,KAAoB,EAAvB,EAA2B;QACvB,KAAKN,MAAL,GAAc,yCAAyC,KAAKM,UAA9C,GAA2D,YAA3D,GAA0E,KAAKD,UAA/E,GAA4F,UAA5F,GAAyG,KAAKe,MAA5H;QACA,KAAKnB,MAAL,GAAc,IAAd;QAEA,KAAKiB,SAAL;QACA,KAAKG,SAAL;MACJ,CANA,MAOI;QACA,KAAKC,YAAL;MACJ;IAEH,CApBI;;IAqBLA,YAAY,GAAG;MACX,KAAKtB,MAAL,GAAc,kDAAkD,KAAKQ,OAAvD,GAAiE,YAAjE,GAAgF,KAAKH,UAArF,GAAkG,UAAlG,GAA+G,KAAKe,MAAlI;MACA,KAAKnB,MAAL,GAAc,IAAd;MACA,KAAKK,UAAL,GAAkB,EAAlB;MAEA,KAAKY,SAAL;MACA,KAAKG,SAAL;IACH,CA5BI;;IA6BLA,SAAS,GAAE;MACP,IAAIE,GAAE,GAAI,IAAIC,OAAJ,CAAY,KAAKxB,MAAL,GAAc,QAAd,GAAyB,KAAKG,WAA1C,CAAV;MACAsB,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACWC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADpB,EAEKF,IAFL,CAEW3B,IAAD,IAAU;QACZ,KAAKK,YAAL,GAAoBL,IAAI,CAACK,YAAzB;QACAL,IAAI,CAACQ,QAAL,CAAcsB,OAAd,CAAsBC,OAAM,IAAK;UAC7B,KAAKvB,QAAL,CAAcwB,IAAd,CAAmBD,OAAnB;QACH,CAFD;QAGA,KAAK7B,MAAL,GAAc,KAAd;QACA,KAAKC,UAAL,GAAkB,KAAlB;MACH,CATL,EAFO,CAYH;MACA;MACA;IACP,CA5CI;;IA6CL8B,aAAa,GAAE;MACX,MAAMC,QAAO,GAAI,IAAIC,oBAAJ,CAA0BC,OAAD,IAAa;QACnDA,OAAO,CAACN,OAAR,CAAgBO,KAAI,IAAK;UACrB,IAAGA,KAAK,CAACC,iBAAN,GAA0B,CAA1B,IAA+B,KAAKlC,WAAL,GAAmB,KAAKO,SAA1D,EAAqE;YACjE,KAAKR,UAAL,GAAkB,IAAlB;YACA,KAAKC,WAAL,IAAoB,CAApB;YACA,KAAKkB,SAAL;UACJ;QACH,CAND;MAOH,CARgB,CAAjB;MAUAY,QAAQ,CAACK,OAAT,CAAiB,KAAKC,KAAL,CAAWC,qBAA5B;IACJ;;EAzDK,CArBC;;EAgFVC,OAAO,GAAG;IACN,KAAKnB,YAAL;EACH,CAlFS;;EAmFVoB,OAAO,GAAE;IACL,KAAKV,aAAL;EACJ;;AArFU,CAAd","names":["name","props","data","apiUrl","isBusy","showLoader","currentPage","totalResults","maxPerPage","searchword","articles","country","computed","pageCount","Math","ceil","methods","navTo","url","window","open","resetData","fetchSearchNews","apiKey","fetchData","fetchTopNews","req","Request","fetch","then","resp","json","forEach","element","push","scrollTrigger","observer","IntersectionObserver","entries","entry","intersectionRatio","observe","$refs","infinitescrolltrigger","created","mounted"],"sourceRoot":"","sources":["/Users/amyweb/Documents/GitHub/formative-one/src/components/News.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"searchbar\">\n            <form @submit.prevent=\"fetchSearchNews\">\n                <input type=\"text\" placeholder=\"search...\" v-model=\"searchword\">\n            </form>\n            <div class=\"search-icons\">\n                <i v-if=\"!isBusy\" class=\"fas fa-search pointer\" @click=\"fetchSearchNews\"></i>\n                <i v-else class=\"fas fa-spinner fa-spin\"></i>\n                <i class=\"fas fa-times pointer\" @click=\"fetchTopNews\"></i>\n            </div>\n        </div>\n        <div class=\"result-list\">\n           <article v-for=\"(article, index) in articles\" :key=\"index\" @click=\"navTo(article.url)\" class=\"pointer\">\n                <header>\n                    <img v-if=\"article.urlToImage\" :src=\"article.urlToImage\" alt=\"\">\n                    <i v-else class=\"fas fa-image\"></i>\n                    <h2>{{article.title}}</h2>\n                    <h5>{{article.author}} || {{article.source.name}}</h5>\n                    <p>{{article.description}}</p>\n                </header>\n                \n                <footer>\n                <i class=\"fas fa-chevron-right\"></i>\n                </footer>\n           </article>\n        </div>\n        <div ref=\"infinitescrolltrigger\" id=\"scroll-trigger\">\n            <i v-if=\"showLoader\" class=\"fas fa-spinner fa-spin\"></i>\n\n        </div>\n    </div>\n</template>\n\n<script>\n\n\nexport default{\n    name: 'NewsApp',\n    props: ['apiKey'],\n    data(){\n        return{\n            apiUrl: '',\n            isBusy: false,\n            showLoader: false,\n            currentPage: 1,\n            totalResults: 0,\n            maxPerPage: 20,\n            searchword: '',\n            articles: [],\n            country: 'nz',\n        }\n    },\n    computed:{\n        pageCount(){\n            return Math.ceil(this.totalResults/this.maxPerPage);\n        }\n    },\n    methods: {\n        navTo(url){\n            window.open(url);\n        },\n        resetData(){\n        this.currentPage = 1;\n        this.articles = [];\n        },\n        fetchSearchNews() {\n            if(this.searchword !== '') {\n                this.apiUrl = 'https://newsapi.org/v2/everything?q=' + this.searchword + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n                this.isBusy = true;\n\n                this.resetData();\n                this.fetchData();\n            }\n            else{\n                this.fetchTopNews();\n            }\n            \n        },\n        fetchTopNews() {\n            this.apiUrl = 'https://newsapi.org/v2/top-headlines?country=' + this.country + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n            this.isBusy = true;\n            this.searchword = '';\n\n            this.resetData();\n            this.fetchData();\n        },\n        fetchData(){\n            let req = new Request(this.apiUrl + '&page=' + this.currentPage);\n            fetch(req)\n                .then((resp) => resp.json())\n                .then((data) => {\n                    this.totalResults = data.totalResults;\n                    data.articles.forEach(element => {\n                        this.articles.push(element);\n                    });\n                    this.isBusy = false;\n                    this.showLoader = false;\n                })\n                // .catch((error) => {\n                //     console.log('Error');\n                // })\n        },\n        scrollTrigger(){\n            const observer = new IntersectionObserver((entries) => {\n                entries.forEach(entry => {\n                    if(entry.intersectionRatio > 0 && this.currentPage < this.pageCount) {\n                        this.showLoader = true;\n                        this.currentPage += 1;\n                        this.fetchData();\n                    }\n                })\n            });\n\n            observer.observe(this.$refs.infinitescrolltrigger);\n        }\n    },\n    created() {\n        this.fetchTopNews();\n    },\n    mounted(){\n        this.scrollTrigger();\n    }\n}\n\n</script>\n\n<style>\n\n.result-list{\n    text-align: center;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}