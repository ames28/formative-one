{"ast":null,"code":"import SearchBar from './components/Search.vue';\nexport default {\n  name: 'NewsApp',\n  props: ['apiKey'],\n\n  data() {\n    return {\n      // apiUrl: '',\n      // isBusy: false,\n      showLoader: false // currentPage: 1,\n      // totalResults: 0,\n      // maxPerPage: 20,\n      // searchword: '',\n      // articles: [],\n      // country: 'nz',\n\n    };\n  },\n\n  computed: {\n    pageCount() {\n      return Math.ceil(this.totalResults / this.maxPerPage);\n    }\n\n  },\n  methods: {\n    navTo(url) {\n      window.open(url);\n    },\n\n    // resetData(){\n    // this.currentPage = 1;\n    // this.articles = [];\n    // },\n    // fetchSearchNews() {\n    //     if(this.searchword !== '') {\n    //         this.apiUrl = 'https://newsapi.org/v2/everything?q=' + this.searchword + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n    //         this.isBusy = true;\n    //         this.resetData();\n    //         this.fetchData();\n    //     }\n    //     else{\n    //         this.fetchTopNews();\n    //     }\n    // },\n    fetchTopNews() {\n      this.apiUrl = 'https://newsapi.org/v2/top-headlines?country=' + this.country + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n      this.isBusy = true;\n      this.searchword = '';\n      this.resetData();\n      this.fetchData();\n    },\n\n    fetchData() {\n      let req = new Request(this.apiUrl + '&page=' + this.currentPage);\n      fetch(req).then(resp => resp.json()).then(data => {\n        this.totalResults = data.totalResults;\n        data.articles.forEach(element => {\n          this.articles.push(element);\n        });\n        this.isBusy = false;\n        this.showLoader = false;\n      }); // .catch((error) => {\n      //     console.log('Error');\n      // })\n    },\n\n    scrollTrigger() {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.intersectionRatio > 0 && this.currentPage < this.pageCount) {\n            this.showLoader = true;\n            this.currentPage += 1;\n            this.fetchData();\n          }\n        });\n      });\n      observer.observe(this.$refs.infinitescrolltrigger);\n    }\n\n  },\n\n  created() {\n    this.fetchTopNews();\n  },\n\n  mounted() {\n    this.scrollTrigger();\n  },\n\n  components: {\n    SearchBar\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,SAAP,MAAsB,yBAAtB;AAEA,eAAc;EACVC,IAAI,EAAE,SADI;EAEVC,KAAK,EAAE,CAAC,QAAD,CAFG;;EAGVC,IAAI,GAAE;IACF,OAAM;MACF;MACA;MACAC,UAAU,EAAE,KAHV,CAIF;MACA;MACA;MACA;MACA;MACA;;IATE,CAAN;EAWH,CAfS;;EAgBVC,QAAQ,EAAC;IACLC,SAAS,GAAE;MACP,OAAOC,IAAI,CAACC,IAAL,CAAU,KAAKC,YAAL,GAAkB,KAAKC,UAAjC,CAAP;IACJ;;EAHK,CAhBC;EAqBVC,OAAO,EAAE;IACLC,KAAK,CAACC,GAAD,EAAK;MACNC,MAAM,CAACC,IAAP,CAAYF,GAAZ;IACH,CAHI;;IAIL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACAG,YAAY,GAAG;MACX,KAAKC,MAAL,GAAc,kDAAkD,KAAKC,OAAvD,GAAiE,YAAjE,GAAgF,KAAKR,UAArF,GAAkG,UAAlG,GAA+G,KAAKS,MAAlI;MACA,KAAKC,MAAL,GAAc,IAAd;MACA,KAAKC,UAAL,GAAkB,EAAlB;MAEA,KAAKC,SAAL;MACA,KAAKC,SAAL;IACH,CA5BI;;IA6BLA,SAAS,GAAE;MACP,IAAIC,GAAE,GAAI,IAAIC,OAAJ,CAAY,KAAKR,MAAL,GAAc,QAAd,GAAyB,KAAKS,WAA1C,CAAV;MACAC,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACWC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADpB,EAEKF,IAFL,CAEWzB,IAAD,IAAU;QACZ,KAAKM,YAAL,GAAoBN,IAAI,CAACM,YAAzB;QACAN,IAAI,CAAC4B,QAAL,CAAcC,OAAd,CAAsBC,OAAM,IAAK;UAC7B,KAAKF,QAAL,CAAcG,IAAd,CAAmBD,OAAnB;QACH,CAFD;QAGA,KAAKb,MAAL,GAAc,KAAd;QACA,KAAKhB,UAAL,GAAkB,KAAlB;MACH,CATL,EAFO,CAYH;MACA;MACA;IACP,CA5CI;;IA6CL+B,aAAa,GAAE;MACX,MAAMC,QAAO,GAAI,IAAIC,oBAAJ,CAA0BC,OAAD,IAAa;QACnDA,OAAO,CAACN,OAAR,CAAgBO,KAAI,IAAK;UACrB,IAAGA,KAAK,CAACC,iBAAN,GAA0B,CAA1B,IAA+B,KAAKd,WAAL,GAAmB,KAAKpB,SAA1D,EAAqE;YACjE,KAAKF,UAAL,GAAkB,IAAlB;YACA,KAAKsB,WAAL,IAAoB,CAApB;YACA,KAAKH,SAAL;UACJ;QACH,CAND;MAOH,CARgB,CAAjB;MAUAa,QAAQ,CAACK,OAAT,CAAiB,KAAKC,KAAL,CAAWC,qBAA5B;IACJ;;EAzDK,CArBC;;EAgFVC,OAAO,GAAG;IACN,KAAK5B,YAAL;EACH,CAlFS;;EAmFV6B,OAAO,GAAE;IACL,KAAKV,aAAL;EACH,CArFS;;EAsFVW,UAAU,EAAE;IACZ9C;EADY;AAtFF,CAAd","names":["SearchBar","name","props","data","showLoader","computed","pageCount","Math","ceil","totalResults","maxPerPage","methods","navTo","url","window","open","fetchTopNews","apiUrl","country","apiKey","isBusy","searchword","resetData","fetchData","req","Request","currentPage","fetch","then","resp","json","articles","forEach","element","push","scrollTrigger","observer","IntersectionObserver","entries","entry","intersectionRatio","observe","$refs","infinitescrolltrigger","created","mounted","components"],"sourceRoot":"","sources":["/Users/amyweb/Documents/GitHub/formative-one/src/components/News.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"searchbar\">\n            <form @submit.prevent=\"fetchSearchNews\">\n                <input type=\"text\" placeholder=\"search...\" v-model=\"searchword\">\n            </form>\n            <div class=\"search-icons\">\n                <i v-if=\"!isBusy\" class=\"fas fa-search\" @click=\"fetchSearchNews\"></i>\n                <i v-else class=\"fas fa-spinner fa-spin\"></i>\n                <i class=\"fas fa-times\" @click=\"fetchTopNews\"></i>\n            </div>\n        </div>\n        <div class=\"result-list\">\n           <article v-for=\"(article, index) in articles\" :key=\"index\" @click=\"navTo(article.url)\">\n                <header>\n                    <img v-if=\"article.urlToImage\" :src=\"article.urlToImage\" alt=\"\">\n                    <i v-else class=\"fas fa-image\"></i>\n                    <h2>{{article.title}}</h2>\n                    <h5>{{article.author}} || {{article.source.name}}</h5>\n                    <p>{{article.description}}</p>\n                </header>\n                \n                <footer>\n                <i class=\"fas fa-chevron-right\"></i>\n                </footer>\n           </article>\n        </div>\n        <div ref=\"infinitescrolltrigger\" id=\"scroll-trigger\">\n            <i v-if=\"showLoader\" class=\"fas fa-spinner fa-spin\"></i>\n\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport SearchBar from './components/Search.vue'\n\nexport default{\n    name: 'NewsApp',\n    props: ['apiKey'],\n    data(){\n        return{\n            // apiUrl: '',\n            // isBusy: false,\n            showLoader: false,\n            // currentPage: 1,\n            // totalResults: 0,\n            // maxPerPage: 20,\n            // searchword: '',\n            // articles: [],\n            // country: 'nz',\n        }\n    },\n    computed:{\n        pageCount(){\n            return Math.ceil(this.totalResults/this.maxPerPage);\n        }\n    },\n    methods: {\n        navTo(url){\n            window.open(url);\n        },\n        // resetData(){\n        // this.currentPage = 1;\n        // this.articles = [];\n        // },\n        // fetchSearchNews() {\n        //     if(this.searchword !== '') {\n        //         this.apiUrl = 'https://newsapi.org/v2/everything?q=' + this.searchword + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n        //         this.isBusy = true;\n\n        //         this.resetData();\n        //         this.fetchData();\n        //     }\n        //     else{\n        //         this.fetchTopNews();\n        //     }\n            \n        // },\n        fetchTopNews() {\n            this.apiUrl = 'https://newsapi.org/v2/top-headlines?country=' + this.country + '&pageSize=' + this.maxPerPage + '&apiKey=' + this.apiKey;\n            this.isBusy = true;\n            this.searchword = '';\n\n            this.resetData();\n            this.fetchData();\n        },\n        fetchData(){\n            let req = new Request(this.apiUrl + '&page=' + this.currentPage);\n            fetch(req)\n                .then((resp) => resp.json())\n                .then((data) => {\n                    this.totalResults = data.totalResults;\n                    data.articles.forEach(element => {\n                        this.articles.push(element);\n                    });\n                    this.isBusy = false;\n                    this.showLoader = false;\n                })\n                // .catch((error) => {\n                //     console.log('Error');\n                // })\n        },\n        scrollTrigger(){\n            const observer = new IntersectionObserver((entries) => {\n                entries.forEach(entry => {\n                    if(entry.intersectionRatio > 0 && this.currentPage < this.pageCount) {\n                        this.showLoader = true;\n                        this.currentPage += 1;\n                        this.fetchData();\n                    }\n                })\n            });\n\n            observer.observe(this.$refs.infinitescrolltrigger);\n        }\n    },\n    created() {\n        this.fetchTopNews();\n    },\n    mounted(){\n        this.scrollTrigger();\n    },\n    components: {\n    SearchBar\n  }\n}\n\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}